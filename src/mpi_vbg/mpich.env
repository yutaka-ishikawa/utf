#
# MPICH on Tofu Shell Environment
#

##
## UTF
##
if [ X$UTF_MSGMODE = X ]; then
   export UTF_MSGMODE=0	# Eager in default
   #export UTF_MSGMODE=1	# Rendezous
fi
if [ X$UTF_TRANSMODE = X ]; then
    export UTF_TRANSMODE=1	# Aggressive in default
fi

if [ X$UTF_INJECT_COUNT = X ]; then
    export UTF_INJECT_COUNT=1	#
fi
if [ X$UTF_ASEND_COUNT = X ]; then
    export UTF_ASEND_COUNT=1	#
fi

if [ X$UTF_ARMA_COUNT = X ]; then
   export UTF_ARMA_COUNT=2
fi

export TOFU_NAMED_AV=1

#
# Tofu Provider
#
#export MPIR_CVAR_OFI_USE_PROVIDER=tofu
export FI_PROVIDER=tofu
export MPICH_CH4_OFI_ENABLE_SCALABLE_ENDPOINTS=1
export MPIR_CVAR_CH4_OFI_ENABLE_ATOMICS=-1
export MPIR_CVAR_CH4_OFI_ENABLE_MR_VIRT_ADDRESS=1
export MPIR_CVAR_CH4_OFI_ENABLE_RMA=1
export MPIR_CVAR_CH4_OFI_ENABLE_AM=1
#
# TAGGED or not
if [ X$MPIR_CVAR_CH4_OFI_ENABLE_TAGGED = X ]; then
  ##export MPIR_CVAR_CH4_OFI_ENABLE_TAGGED=1
  export MPIR_CVAR_CH4_OFI_ENABLE_TAGGED=0
fi
#
# short send size
if [ X$MPIR_CVAR_CH4_OFI_SHORT_SEND_SIZE = X ]; then
   export MPIR_CVAR_CH4_OFI_SHORT_SEND_SIZE=2048
   ##export MPIR_CVAR_CH4_OFI_SHORT_SEND_SIZE=16384
fi
export MPIR_CVAR_CH4_OFI_EAGER_MAX_MSG_SIZE=8388608		# 8*1024*1024

###export MPIR_CVAR_CH4_OFI_CAPABILITY_SETS_DEBUG=1
##
## Collective
##
export MPIR_CVAR_ALLTOALL_SHORT_MSG_SIZE=2147483647 # 32768 in default (integer value)  
# export MPIR_CVAR_ALLTOALL_INTRA_ALGORITHM=pairwise_sendrecv_replace
#	for 123 procs, no more eager receiver buffer

#
# All to all
export MPIR_CVAR_ALLTOALL_INTRA_ALGORITHM=brucks
#
# Reduce
export MPIR_CVAR_REDUCE_INTRA_ALGORITHM=binomial
##export MPIR_CVAR_REDUCE_INTRA_ALGORITHM=nb
#
# Allreduce
export MPIR_CVAR_ALLREDUCE_INTRA_ALGORITHM=recursive_doubling	#
#
# Gather
export MPIR_CVAR_GATHER_INTRA_ALGORITHM=binomial # 20210101
#
# Gatherv
export MPIR_CVAR_GATHERV_INTRA_ALGORITHM=linear	# 20210101
#
# Allgather
export MPIR_CVAR_ALLGATHER_INTRA_ALGORITHM=ring # works with MPICH bug-fix, checked up to 1024 procs
#export MPIR_CVAR_ALLGATHER_INTRA_ALGORITHM=recursive_doubling # works with MPICH bug-fix, but it's slow ?
#
# Allgatherv
export MPIR_CVAR_ALLGATHERV_INTRA_ALGORITHM=ring # works with MPICH bug-fix, checked up to 1024 procs
#
# Scatterv
export MPIR_CVAR_SCATTERV_INTRA_ALGORITHM=linear

# Others
##export MPIR_CVAR_ALLREDUCE_DEVICE_COLLECTIVE=0 # this does not matter

if [ X$MPIR_CVAR_CH4_OFI_CAPABILITY_SETS_DEBUG = X1 ]; then
echo "MPIR_CVAR_DEVICE_COLLECTIVES = " $MPIR_CVAR_DEVICE_COLLECTIVES
echo "MPIR_CVAR_BARRIER_INTRA_ALGORITHM  = " $MPIR_CVAR_BARRIER_INTRA_ALGORITHM
echo "MPIR_CVAR_ALLTOALL_INTRA_ALGORITHM = " $MPIR_CVAR_ALLTOALL_INTRA_ALGORITHM
echo "MPIR_CVAR_REDUCE_INTRA_ALGORITHM   = " $MPIR_CVAR_REDUCE_INTRA_ALGORITHM
echo "MPIR_CVAR_ALLREDUCE_INTRA_ALGORITHM = " $MPIR_CVAR_ALLREDUCE_INTRA_ALGORITHM
echo "MPIR_CVAR_GATHER_INTRA_ALGORITHM    = " $MPIR_CVAR_GATHER_INTRA_ALGORITHM
echo "MPIR_CVAR_GATHERV_INTRA_ALGORITHM   = " $MPIR_CVAR_GATHERV_INTRA_ALGORITHM
echo "MPIR_CVAR_GATHERV_INTER_SSEND_MIN_PROCS = " $MPIR_CVAR_GATHERV_INTER_SSEND_MIN_PROCS
echo "MPIR_CVAR_ALLGATHER_INTRA_ALGORITHM = " $MPIR_CVAR_ALLGATHER_INTRA_ALGORITHM
echo "MPIR_CVAR_ALLGATHERV_INTRA_ALGORITHM= " $MPIR_CVAR_ALLGATHER_INTRA_ALGORITHM
echo "MPIR_CVAR_SCATTERV_INTRA_ALGORITHM= " $MPIR_CVAR_SCATTERV_INTRA_ALGORITHM
fi
